[{"/home/chad/Desktop/PERN/client/src/index.js":"1","/home/chad/Desktop/PERN/client/src/App.js":"2","/home/chad/Desktop/PERN/client/src/components/InputTodo.js":"3","/home/chad/Desktop/PERN/client/src/components/ListTodos.js":"4","/home/chad/Desktop/PERN/client/src/components/EditTodo.js":"5"},{"size":219,"mtime":1607633111655,"results":"6","hashOfConfig":"7"},{"size":351,"mtime":1607559273535,"results":"8","hashOfConfig":"7"},{"size":979,"mtime":1607636074862,"results":"9","hashOfConfig":"7"},{"size":1583,"mtime":1607632832728,"results":"10","hashOfConfig":"7"},{"size":2275,"mtime":1607632834260,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"p4yxrk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/chad/Desktop/PERN/client/src/index.js",[],["25","26"],"/home/chad/Desktop/PERN/client/src/App.js",[],"/home/chad/Desktop/PERN/client/src/components/InputTodo.js",["27"],"/home/chad/Desktop/PERN/client/src/components/ListTodos.js",["28"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n  const [todos, setTodos] = useState([]);\n\n  //Delete TODO function\n  const deleteTodo = async (id) => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\",\n      });\n\n      setTodos(todos.filter((todo) => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <Fragment>\n      <table className=\"table table-dark table-striped mt-5 text-center\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo) => (\n            <tr key={todo.todo_id}>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} />\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;\n","/home/chad/Desktop/PERN/client/src/components/EditTodo.js",["29"],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  //Edit TODO Description Function\n  const updateDescription = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { description };\n\n      //Proxy\n\n      const response = await fetch(\n        `http://localhost:5000/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      <div className=\"modal fade\" id={`id${todo.todo_id}`}>\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={(e) => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":10,"column":13,"nodeType":"36","messageId":"37","endLine":10,"endColumn":21},{"ruleId":"34","severity":1,"message":"38","line":10,"column":13,"nodeType":"36","messageId":"37","endLine":10,"endColumn":23},{"ruleId":"34","severity":1,"message":"35","line":14,"column":13,"nodeType":"36","messageId":"37","endLine":14,"endColumn":21},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]